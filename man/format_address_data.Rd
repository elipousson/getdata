% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_address_data.R
\name{format_address_data}
\alias{format_address_data}
\alias{bind_block_col}
\alias{bind_address_col}
\alias{bind_location_text_col}
\title{Format data frames and simple features with address data}
\usage{
bind_block_col(
  x,
  bldg_num = "bldg_num",
  street_dir_prefix = "street_dir_prefix",
  street_name = "street_name",
  street_suffix = "street_type",
  replace_suffix = FALSE,
  street_col = NULL,
  block_col = NULL,
  .after = street_suffix,
  case = NULL
)

bind_address_col(x, ..., case = NULL, .cols = NULL, .after = NULL)

bind_location_text_col(
  x,
  text_col = "text",
  address_pattern = c("Ave.", "Avenue", "St.", "Street", "Rd.", "Road"),
  block_face_pattern = c("sides\\\\)", "side\\\\)", "[:space:]block", "-block", "blocks"),
  street_corridor_pattern = c("between(?=.+and)", "from(?=.+to)"),
  .cols = NULL
)
}
\arguments{
\item{x}{A data.frame with a column name matching col and no column names
matching the list passed to .cols (or the default values listed below).}

\item{bldg_num, street_dir_prefix, street_name, street_suffix}{Column names to
use for address information required to generate a block name and number.}

\item{replace_suffix}{If \code{TRUE}, replace values in street_suffix column with
abbreviations from \link{street_suffixes}.}

\item{street_col}{String to use for street address column added based on
component column values.}

\item{block_col}{String to use as prefix for block identifier columns and
separator between block number and street. Set to "block" when \code{NULL}
(default). If length 2 (e.g. c("blk", "block")), the second value is used
as the block separator and the first as the column identifier prefix.}

\item{.after}{passed to \code{\link[dplyr:mutate]{dplyr::mutate()}} defaults to street_suffix for
\code{\link[=bind_block_col]{bind_block_col()}} and "address" for \code{\link[=bind_address_col]{bind_address_col()}}.}

\item{case}{Case to use for text in new columns or in modified values.
Options include "lower", "upper", "title", or "sentence". Defaults to
\code{NULL} which leaves the case as is.}

\item{...}{Additional parameters passed to \code{\link[dplyr:mutate]{dplyr::mutate()}} intended for use
in filling missing values, e.g. state = "MD" to add a missing state column.}

\item{.cols}{Column names to add. Defaults to is_address, is_block_face,
is_street_corridor, and block_side. x must not have any column names
matching the names found in .cols.}

\item{text_col}{Column name containing the information to check for location
details, Default: 'text'}

\item{address_pattern}{A character vector of regex patterns to return \code{TRUE}
for is_address.}

\item{block_face_pattern}{A character vector of regex patterns to return
\code{TRUE} for is_block_face.}

\item{street_corridor_pattern}{A character vector of regex patterns to return
\code{TRUE} for is_street_corridor.}
}
\value{
A data.frame with new indicator columns for address and block_face
and a column indicating whether the text references a particular cardinal
direction in describing a block.
}
\description{
getdata has two helpers for working with address data:
\itemize{
\item \code{\link[=bind_address_col]{bind_address_col()}} bind a provided value for city, county, and state to a
data frame (to supplement address data with consistent values for these
variables). This function is useful for converting partial street addresses
with a consistent values for state, county, or city into full addresses
\item \code{\link[=bind_block_col]{bind_block_col()}} requires a data frame with columns named "bldg_num",
"street_dir_prefix", "street_name", and "street_type" and binds derived
values for whether a building is on the even or odd side of a block and
create a block segment and a block face (including the even/odd identifier).
}
}
\examples{
address_df <- data.frame(
    "bldg_num" = c("100", "1415", "600"),
    "street_dir_prefix" = c(NA, NA, "N"),
    "street_name" = c("Holiday", "Key", "Charles"),
    "street_type" = c("Street", "Highway", "St")
  )

address_df <- bind_block_col(
    x = address_df,
    street_col = "street_address"
  )

address_df[1,]

address_df <- bind_address_col(
    address_df,
    city = "Baltimore",
    state = "MD"
  )

address_df[2,]

location_df <- data.frame(
    "text" = c(
      "100 Holiday St.",
      "1400 block Key Highway (north side)",
      "Charles St. from E. Centre St. to E. Madison St."
    )
)

location_df <- bind_location_text_col(location_df)

location_df
}
